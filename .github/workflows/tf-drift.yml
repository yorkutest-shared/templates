name: 'Terraform Configuration Drift Detection'

on:
  workflow_call:
    inputs:
        targetEnv:
          required: true
          type: string
        commandOptions:
          type: string
          default: ''
        storageSubscriptionId:
          type: string
          default: ed7af097-864f-41f7-9c0f-413b22cc9391
        storageTenantId:
          type: string
          default: 34531318-7011-4fd4-87f0-a43816c49bd0
        storageResourceGroup:
          type: string
          default: RG-YU-CC-tfstate-all
        storageAccountName:
          type: string
          default: yucctfstate01
        storageContainerName:
          type: string
          default: ${{github.repository_owner}}
        additionalBackendConfig:
          type: string
          default: 'use_oidc=true'
        storageKey:
          type: string
          default: ''
        variableFile:
          type: string
          default: ''
        runsOnGroup:
          type: string
          default: yorku-shared-runners-new

jobs:
  terraform-plan:
    name: 'Terraform Plan'
    uses: ./.github/workflows/tf-plan.yml
    with:
      targetEnv: ${{inputs.targetEnv}}
      commandOptions: ${{inputs.commandOptions}}
      storageSubscriptionId: ${{inputs.storageSubscriptionId}}
      storageTenantId: ${{inputs.storageTenantId}}
      storageResourceGroup: ${{inputs.storageResourceGroup}}
      storageAccountName: ${{inputs.storageAccountName}}
      storageContainerName: ${{inputs.storageContainerName}}
      additionalBackendConfig: ${{inputs.additionalBackendConfig}}
      storageKey: ${{inputs.storageKey}}
      variableFile: ${{inputs.variableFile}}
      runsOnGroup: ${{inputs.runsOnGroup}}
    secrets: inherit

  address-drift:
    name: 'Address Terraform Drift'
    runs-on: 
      group: ${{ inputs.runsOnGroup }}
    needs: [terraform-plan]
    steps:
    # If changes are detected, create a new issue
    - name: Publish Drift Report
      if: needs.terraform-plan.outputs.tfplanExitCode == 2
      uses: actions/github-script@v6
      env:
        SUMMARY: "${{ needs.terraform-plan.outputs.summary }}"
      with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const body = `${process.env.SUMMARY}`;
            const title = 'Terraform Configuration Drift Detected in ${{ inputs.targetEnv }}';
            const creator = 'github-actions[bot]'
          
            // Look to see if there is an existing drift issue
            const issues = await github.rest.issues.listForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: 'open',
              creator: creator,
              title: title
            })
              
            if( issues.data.length > 0 ) {
              // We assume there shouldn't be more than 1 open issue, since we update any issue we find
              const issue = issues.data[0]
              
              if ( issue.body == body ) {
                console.log('Drift Detected: Found matching issue with duplicate content')
              } else {
                console.log('Drift Detected: Found matching issue, updating body')
                github.rest.issues.update({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  issue_number: issue.number,
                  body: body
                })
              }
            } else {
              console.log('Drift Detected: Creating new issue')

              github.rest.issues.create({
                owner: context.repo.owner,
                repo: context.repo.repo,
                title: title,
                body: body
             })
            }
            
    # If changes aren't detected, close any open drift issues
    - name: Publish Drift Report
      if: needs.terraform-plan.outputs.tfplanExitCode == 0
      uses: actions/github-script@v6
      with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const title = 'Terraform Configuration Drift Detected in ${{ inputs.targetEnv }}';
            const creator = 'github-actions[bot]'
          
            // Look to see if there is an existing drift issue
            const issues = await github.rest.issues.listForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: 'open',
              creator: creator,
              title: title
            })
              
            if( issues.data.length > 0 ) {
              const issue = issues.data[0]
              
              github.rest.issues.update({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: issue.number,
                state: 'closed'
              })
            } 
             
    # Mark the workflow as failed if drift detected 
    - name: Error on Failure
      if: needs.terraform-plan.outputs.tfplanExitCode == 2
      run: exit 1
